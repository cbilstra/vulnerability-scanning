import datetime
from collections import Counter
import re
import os
from typing import Tuple

from matplotlib import pyplot as plt
import numpy as np
import collections


sendmail_dates = {
    '2.0': '1993-07-11',
    '6.0': '1993-10-05',
    '6.9': '1994-04-19',
    '8.0': '1996-09-26',
    '8.4': '1996-12-02',
    '8.6': '1997-06-14',
    '9.0': '1998-05-19',
    '9.1': '1998-07-02',
    '10.0': '2000-03-01',
    '11.0': '2000-07-19',
    '11.2': '2000-12-29',
    '11.4': '2001-05-28',
    '11.5': '2001-07-31',
    '12.0': '2001-09-08',
    '12.1': '2001-10-01',
    '12.3': '2002-04-05',
    '13.0': '2004-06-20',
    '13.1': '2004-07-30',
    '13.2': '2004-12-15',
    '13.3': '2005-01-11',
    '13.4': '2005-03-27',
    '13.5': '2005-09-16',
    '13.6': '2006-03-22',
    '13.7': '2006-06-14',
    '13.8': '2006-08-09',
    '14.0': '2007-01-31',
    '14.1': '2007-04-03',
    '14.2': '2007-11-01',
    '14.3': '2008-05-03',
    '14.4': '2009-12-30',
    '14.5': '2011-05-17',
    '14.6': '2012-12-23',
}

exim_dates = {
    '4.61': '2006-04-04',
    '4.62': '2006-04-28',
    '4.63': '2006-07-31',
    '4.64': '2006-12-20',
    '4.65': '2007-01-02',
    '4.66': '2007-01-08',
    '4.67': '2007-04-17',
    '4.68': '2007-08-30',
    '4.69': '2007-12-01',
    '4.70': '2009-11-13',
    '4.71': '2009-11-23',
    '4.72': '2010-06-03',
    '4.73': '2010-12-26',
    '4.74': '2011-01-25',
    '4.75': '2011-03-22',
    '4.76': '2011-05-09',
    '4.77': '2011-10-10',
    '4.80': '2012-05-31',
}

def find(s, ch):
    return [i for i, ltr in enumerate(s) if ltr == ch]


def extract_smtp_counts(month: str) -> Tuple[Counter, Counter]:
    sendmail_discarded = set()
    sendmail_discard_count = 0
    sendmail_counts = Counter()
    sendmail_total = 0

    exim_discarded = set()
    exim_discard_count = 0
    exim_counts = Counter()
    exim_total = 0

    for file_nr in range(1):
        file_string = f'critical_{month}_25_{file_nr}.npz'
        filepath = os.path.join('..', 'processed_data', file_string)
        arrays = np.load(filepath, allow_pickle=True)
        entries = arrays['arr_0']

        for entry in entries:
            input_banner = entry['banner']

            if 'Sendmail' in input_banner:
                matches = re.findall("Sendmail [0-9]+\.[0-9]+\.[0-9]+", input_banner)
                if len(matches) > 0:
                    result = matches[0][9:]

                    if not result.startswith('8'):
                        sendmail_discarded.add(result)
                        sendmail_discard_count += 1
                        continue

                    if result[2:] not in sendmail_dates:
                        sendmail_discarded.add(result)
                        sendmail_discard_count += 1
                        continue

                    sendmail_counts[result[2:]] += 1
                    sendmail_total += 1
            elif 'Exim' in input_banner:
                matches = re.findall("Exim [0-9]+\.[0-9]+", input_banner)
                if len(matches) > 0:
                    result = matches[0][5:]

                    if result not in exim_dates:
                        exim_discarded.add(result)
                        exim_discard_count += 1
                        continue

                    # if not result.startswith('4'):
                    #     # discarded.add(result)
                    #     # discard_count += 1
                    #     print(result)
                    #     print(input_banner)

                    exim_counts[result] += 1
                    exim_total += 1

            # matches = re.findall("Version [0-9]+\.[0-9A-Za-z()]*", input_banner)
            # if len(matches) > 0:
            #     result = find(matches[0], '.')
            #     version = matches[0][8:result[0]+2]
            #     cisco_banner = float(version)
            #
            #     counter[cisco_banner] += 1
            #     total += 1

    print(f"Counted {sendmail_total} Sendmail services and discarded another {sendmail_discard_count}")
    print(f"Counted: {sendmail_counts}")
    print(f"Discarded: {sendmail_discarded}")

    print(f"Counted {exim_total} Exim services and discarded another {exim_discard_count}")
    print(f"Counted: {exim_counts}")
    print(f"Discarded: {exim_discarded}")

    return sendmail_counts, exim_counts


if __name__ == '__main__':
    sendmail, exim = extract_smtp_counts('201205')

    # Plot of version distribution
    x = np.arange(len(sendmail_dates))
    data = [sendmail[key] if key in sendmail else 0 for key in sendmail_dates]

    plt.bar(x, data)
    plt.xticks(x, sendmail_dates.keys(), rotation='vertical', color='gray')
    plt.show()

    # Plot of version date distribution
    x = [datetime.datetime.strptime(v, '%Y-%m-%d') for v in sendmail_dates.values()]

    plt.bar(x, data, width=100)
    plt.xticks(x, sendmail_dates.keys(), rotation='vertical', color='gray')
    plt.show()
