import datetime
from collections import Counter
import re
import os
from matplotlib import pyplot as plt
import numpy as np
import collections


version_dates = {
    '8.0': '1996-09-26',
    '9.0': '1998-05-19',
    '10.0': '2000-03-01',
    '11.0': '2000-07-19',
    '12.0': '2001-09-08',
    '13.0': '2004-06-20',
    '13.1': '2004-07-30',
    '13.2': '2004-12-15',
    '13.3': '2005-01-11',
    '13.4': '2005-03-27',
    '13.5': '2005-09-16',
    '13.6': '2006-03-22',
    '13.7': '2006-06-14',
    '13.8': '2006-08-09',
    '14.0': '2007-01-31',
    '14.1': '2007-04-03',
    '14.2': '2007-11-01',
    '14.3': '2008-05-03',
    '14.4': '2009-12-30',
    '14.5': '2011-05-17',
    '14.6': '2012-12-23',
}

def find(s, ch):
    return [i for i, ltr in enumerate(s) if ltr == ch]


def extract_sendmail_counts(month: str) -> Counter:
    discarded = set()
    discard_count = 0

    sendmail_counts = Counter()
    total = 0

    for file_nr in range(1):
        file_string = f'critical_{month}_25_{file_nr}.npz'
        filepath = os.path.join('..', 'processed_data', file_string)
        arrays = np.load(filepath, allow_pickle=True)
        entries = arrays['arr_0']

        for entry in entries:
            cisco_banner = ''
            input_banner = entry['banner']

            if 'Sendmail' in input_banner:
                matches = re.findall("Sendmail [0-9]+\.[0-9]+\.[0-9]+", input_banner)
                if len(matches) > 0:
                    result = matches[0][9:]

                    if not result.startswith('8'):
                        discarded.add(result)
                        discard_count += 1

                    sendmail_counts[result[2:]] += 1
                    total += 1

            # matches = re.findall("Version [0-9]+\.[0-9A-Za-z()]*", input_banner)
            # if len(matches) > 0:
            #     result = find(matches[0], '.')
            #     version = matches[0][8:result[0]+2]
            #     cisco_banner = float(version)
            #
            #     counter[cisco_banner] += 1
            #     total += 1

    print(f"Counted {total} smtp services and discarded another {discard_count}")
    print(f"Counted: {sendmail_counts}")
    print(f"Discarded: {discarded}")

    return sendmail_counts


if __name__ == '__main__':
    counter = extract_sendmail_counts('201205')

    # Plot of version distribution
    x = np.arange(len(version_dates))
    data = [counter[key] if key in counter else 0 for key in version_dates]

    plt.bar(x, data)
    plt.xticks(x, version_dates.keys(), rotation='vertical', color='gray')
    plt.show()

    # Plot of version date distribution
    x = [datetime.datetime.strptime(v, '%Y-%m-%d') for v in version_dates.values()]

    plt.bar(x, data, width=100)
    plt.xticks(x, version_dates.keys(), rotation='vertical', color='gray')
    plt.show()
