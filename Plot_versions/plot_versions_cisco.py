from collections import Counter
import re
import os
from matplotlib import pyplot as plt
import numpy as np
import collections


def find(s, ch):
    return [i for i, ltr in enumerate(s) if ltr == ch]


def extract_cisco_counts(month: str) -> Counter:
    discarded = set()
    discard_count = 0

    version_counter = Counter()
    total = 0

    try:
        file_nr = 0

        while True:
            file_string = f'critical_{month}_161_{file_nr}.npz'
            filepath = os.path.join('..', 'processed_data', file_string)
            arrays = np.load(filepath, allow_pickle=True)
            entries = arrays['arr_0']

            for entry in entries:
                cisco_banner = ''
                input_banner = entry['banner']

                if 'Cisco' not in input_banner:
                    continue

                matches = re.findall("Version [0-9]+\.[0-9A-Za-z()]*", input_banner)
                if len(matches) > 0:
                    result = find(matches[0], '.')
                    version = matches[0][8:result[0]+2]
                    cisco_banner = float(version)

                    version_counter[cisco_banner] += 1
                    total += 1

            file_nr += 1
    except FileNotFoundError:
        pass

    print(f"Counted {total} Cisco services and discarded another {discard_count}")
    print(f"Counted: {version_counter}")
    print(f"Discarded: {discarded}")

    return version_counter


if __name__ == '__main__':
    counter = extract_cisco_counts('201205')

    # Plot of version distribution
    x = counter.keys()
    y = counter.values()

    plt.bar(x, y, width=0.1, zorder=3)
    plt.yscale('log')
    plt.grid(True, which="both", linestyle="dotted", axis="y", zorder=0)
    plt.xticks(np.arange(min(x), max(x)+0.1, 0.5), rotation='vertical', color='gray')
    plt.savefig("cisco_log_version_distribution.pdf")
    plt.show()

    # show only first 20 versions
    od = collections.OrderedDict(sorted(counter.items()))
    x = list(od.keys())
    y = list(od.values())
    x = x[:20]
    y = y[:20]

    plt.bar(x, y, width=0.1)
    plt.xticks(np.arange(min(x), max(x)+0.1, 0.25), rotation='vertical', color='gray')
    plt.show()
