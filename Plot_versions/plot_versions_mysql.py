from collections import Counter
import re
import os
from matplotlib import pyplot as plt
import numpy as np


def find(s, ch):
    return [i for i, ltr in enumerate(s) if ltr == ch]


def extract_mysql_counts(month: str) -> Counter:
    filepath = os.path.join('..', 'processed_data', f'critical_{month}_3306_0.npz')
    arrays = np.load(filepath, allow_pickle=True)
    entries = arrays['arr_0']

    discarded = set()
    discard_count = 0

    version_counter = Counter()
    total = 0
    version_set = set()

    for entry in entries:
        mysql_tag = 10
        input_banner = entry['banner']
        matches = re.findall("[0-9]+\.[0-9]+\.[0-9]+[a-z]*", input_banner)
        if len(matches) > 0:
            # skip IP addresses
            is_ip = re.findall("[0-9]+\.[0-9]+\.[0-9]+\.[0-9]+", input_banner)
            if is_ip:
                continue
            find_dot = find(matches[0], '.')
            mysql_tag = float(matches[0][:find_dot[1]])

        if mysql_tag > 8:
            discarded.add(mysql_tag)
            discard_count += 1
            continue

        version_counter[mysql_tag] += 1
        version_set.add(matches[0])
        total += 1

    print(f"Counted {total} mysql services and discarded another {discard_count}")
    print(f"Counted: {version_counter}")
    print(f"Discarded: {discarded}")
    print(f'version_set: {version_set}')

    return version_counter


if __name__ == '__main__':
    counter = extract_mysql_counts('201301')

    # Plot of version distribution
    # x = counter.keys()
    # y = counter.values()
    #
    # plt.bar(x, y, width=0.1)
    # # plt.xticks(x, rotation='vertical', color='gray')
    # plt.show()
