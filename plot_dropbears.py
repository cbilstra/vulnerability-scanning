import geopandas
from matplotlib import pyplot as plt
import numpy as np
from shapely.geometry import Point

arrays = np.load('processed_data/critical_201209_22.npz', allow_pickle=True)
entries = arrays['arr_0']


def get_version_number(input_banner: str):
    dropbear_tag = input_banner[input_banner.find('SSH-2.0-dropbear'):]
    return dropbear_tag.split("\r")[0].split("_")[1]


def is_vulnerable(input_version) -> bool:
    ver = int(input_version.split(".")[1][:2])
    if 52 <= ver <= 54:
        return True

    return False


# Extract dropbear services and version
dropbear_scans = []
for banner in entries['banner']:
    if 'SSH-2.0-dropbear' in banner:
        dropbear_scans.append((version := get_version_number(banner), is_vulnerable(version)))
    else:
        dropbear_scans.append(None)


# Extract plot data: only the services that run dropbear and have coordinates
locations = []
vulnerability = []
for entry, dropbear_scan in zip(entries, dropbear_scans):
    if dropbear_scan is None or entry['latitude'] is None:
        continue

    _, vulnerable = dropbear_scan
    locations.append(Point(entry['longitude'], entry['latitude']))
    vulnerability.append('red' if vulnerable else 'green')

plot_data = geopandas.GeoDataFrame({'geometry': locations, 'vulnerability': vulnerability},
                                   crs='EPSG:4326')


# Plot the actual map
world = geopandas.read_file(geopandas.datasets.get_path('naturalearth_lowres'))
world = world[(world.pop_est > 0) & (world.name != "Antarctica")]

base = world.plot(color='lightgray', edgecolor='black')

plot_data = plot_data.to_crs(world.crs)
plot_data.plot(ax=base, color=plot_data['vulnerability'], markersize=1, alpha=0.3)

plt.title("SSH servers running Dropbear in September 2012")
plt.show()
