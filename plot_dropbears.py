import geopandas
from matplotlib import pyplot as plt
import numpy as np
from shapely.geometry import Point




def get_version_number(input_banner: str):
    dropbear_tag = input_banner[input_banner.find('SSH-2.0-dropbear'):]
    try:
        return dropbear_tag.split("\r")[0].split("_")[1]
    except IndexError as e:
        print(input_banner)
        return None


def is_vulnerable(input_version) -> bool:
    ver = int(input_version.split(".")[1][:2])
    if 52 <= ver <= 54:
        return True

    return False

def run_plot():

    arrays = np.load('processed_data/critical_201209_22.npz', allow_pickle=True)
    entries = arrays['arr_0']

    # Extract dropbear services and version
    dropbear_scans = []
    for banner in entries['banner']:
        if 'SSH-2.0-dropbear' in banner:
            dropbear_scans.append((version := get_version_number(banner), is_vulnerable(version)))
        else:
            dropbear_scans.append(None)

    print(f"Loaded {len(entries)} scan results of which "
        f"{len([s for s in dropbear_scans if s is not None])} were Dropbear services.")


    # Extract plot data: only the services that run dropbear and have coordinates
    vulnerable_locations = []
    safe_locations = []
    for entry, dropbear_scan in zip(entries, dropbear_scans):
        if dropbear_scan is None or entry['latitude'] is None:
            continue

        _, vulnerable = dropbear_scan
        point = Point(entry['longitude'], entry['latitude'])

        if vulnerable:
            vulnerable_locations.append(point)
        else:
            safe_locations.append(point)

    vulnerable_data = geopandas.GeoDataFrame({'geometry': vulnerable_locations}, crs='EPSG:4326')
    safe_data = geopandas.GeoDataFrame({'geometry': safe_locations}, crs='EPSG:4326')


    # Plot the actual map
    world = geopandas.read_file(geopandas.datasets.get_path('naturalearth_lowres'))
    world = world[(world.pop_est > 0) & (world.name != "Antarctica")]

    base = world.plot(color='lightgray', edgecolor='black', figsize=(16, 7))

    safe_data = safe_data.to_crs(world.crs)
    vulnerable_data = vulnerable_data.to_crs(world.crs)

    safe_data.plot(ax=base, color='green', markersize=0.2, alpha=0.2, label='Not vulnerable')
    vulnerable_data.plot(ax=base, color='red', markersize=0.2, alpha=0.2, label='Vulnerable')

    plt.title("SSH servers running Dropbear in September 2012")
    legend = plt.legend()
    for handle in legend.legendHandles:
        # Dirty hack to make the markers in the legend more visible, trademark: Jelle Vos
        handle.set_alpha(1)
        handle.set_sizes([2 if s == 0.2 else s for s in handle.get_sizes()])

    plt.savefig('plots/dropbear_09_2012.png')
    plt.show()
