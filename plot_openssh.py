import geopandas
from matplotlib import pyplot as plt
import numpy as np
from shapely.geometry import Point

arrays = np.load('processed_data/critical_201301_22.npz', allow_pickle=True)
entries = arrays['arr_0']

    
def get_version_number(input_banner: str):
    openssh_tag = input_banner[input_banner.find('SSH-2.0-OpenSSH'):]
    split = input_banner.split("_")
    if len(split) > 1:
        check = split[1]
        if not check:
            return None
        else:
            try:
                first_num = int(check[0])
                if check[1] != '.':
                    return first_num
            except Exception as e:
                return None

        return split[1][:3]
    
    return None


def is_vulnerable(input_version) -> bool:
    if input_version:
        ver = float(input_version)
        if ver < 5.7:
            return True

    return False


# Extract OpenSSH services and version
openssh_scans = []
for banner in entries['banner']:
    if 'SSH-2.0-OpenSSH' in banner:
        openssh_scans.append((version := get_version_number(banner), is_vulnerable(version)))
    else:
        openssh_scans.append(None)

print(f"Loaded {len(entries)} scan results of which "
      f"{len([s for s in openssh_scans if s is not None])} were OpenSSH services.")


# Extract plot data: only the services that run OpenSSH and have coordinates
vulnerable_locations = []
safe_locations = []
for entry, openssh_scan in zip(entries, openssh_scans):
    if openssh_scan is None or entry['latitude'] is None:
        continue

    _, vulnerable = openssh_scan
    point = Point(entry['longitude'], entry['latitude'])

    if vulnerable:
        vulnerable_locations.append(point)
    else:
        safe_locations.append(point)

vulnerable_data = geopandas.GeoDataFrame({'geometry': vulnerable_locations}, crs='EPSG:4326')
safe_data = geopandas.GeoDataFrame({'geometry': safe_locations}, crs='EPSG:4326')


# Plot the actual map
world = geopandas.read_file(geopandas.datasets.get_path('naturalearth_lowres'))
world = world[(world.pop_est > 0) & (world.name != "Antarctica")]

base = world.plot(color='lightgray', edgecolor='black', figsize=(16, 7))

safe_data = safe_data.to_crs(world.crs)
vulnerable_data = vulnerable_data.to_crs(world.crs)

safe_data.plot(ax=base, color='green', markersize=0.2, alpha=0.2, label='Not vulnerable')
vulnerable_data.plot(ax=base, color='red', markersize=0.2, alpha=0.2, label='Vulnerable')

plt.title("SSH servers running OpenSSH in January 2013")
legend = plt.legend()
for handle in legend.legendHandles:
    # Dirty hack to make the markers in the legend more visible, trademark: Jelle Vos
    handle.set_alpha(1)
    handle.set_sizes([2 if s == 0.2 else s for s in handle.get_sizes()])

plt.savefig('plots/openssh_01_2013.png')
plt.show()


