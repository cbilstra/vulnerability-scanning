import geopandas
from matplotlib import pyplot as plt
import numpy as np
from shapely.geometry import Point
import re

# https://www.exploit-db.com/exploits/23080
# https://nvd.nist.gov/vuln/detail/CVE-2012-6066
# https://www.rapid7.com/db/modules/exploit/windows/ssh/freesshd_authbypass
# https://github.com/rapid7/metasploit-framework/blob/master//modules/exploits/windows/ssh/freesshd_authbypass.rb

search_pattern = re.compile(r'SSH-2\.0-WeOnlyDo (?P<version>[\w.]+)')


def get_version_number(input_banner: str):
    matches = search_pattern.search(input_banner)
    assert matches is not None

    return matches.group('version')


def is_vulnerable(input_version) -> bool:
    ver = int(input_version.replace('.', ''))
    if ver == 213 or ver == 206:
        return True

    return False


def run_plot():

    arrays = np.load('processed_data/critical_201209_22.npz', allow_pickle=True)
    entries = arrays['arr_0']

    # Extract freesshd services and version
    freesshd_scans = []
    versions = np.full(len(entries['banner']), "Unknown", np.object_)
    n_vulnerable = 0
    i = 0
    for banner in entries['banner']:
        matches = search_pattern.search(banner)
        if matches is not None:
            version = matches.group('version')
            vulnerable = is_vulnerable(version)

            versions[i] = version
            if vulnerable: n_vulnerable += 1

            freesshd_scans.append((version, vulnerable))
        else:
            freesshd_scans.append(None)

        i += 1

    print(f"Loaded {len(entries)} scan results of which "
          f"{len([s for s in freesshd_scans if s is not None])} were FreeSSHd services.")

    print("Active versions and counts: ", np.unique(versions, return_counts=True))
    print("N of vulnerable services: ", n_vulnerable)

    # Extract plot data: only the services that run freesshd and have coordinates
    vulnerable_locations = []
    safe_locations = []
    for entry, freesshd_scans in zip(entries, freesshd_scans):
        if freesshd_scans is None or entry['latitude'] is None:
            continue

        _, vulnerable = freesshd_scans
        point = Point(entry['longitude'], entry['latitude'])

        if vulnerable:
            vulnerable_locations.append(point)
        else:
            safe_locations.append(point)

    vulnerable_data = geopandas.GeoDataFrame({'geometry': vulnerable_locations}, crs='EPSG:4326')
    safe_data = geopandas.GeoDataFrame({'geometry': safe_locations}, crs='EPSG:4326')

    # Plot the actual map
    world = geopandas.read_file(geopandas.datasets.get_path('naturalearth_lowres'))
    world = world[(world.pop_est > 0) & (world.name != "Antarctica")]

    base = world.plot(color='lightgray', edgecolor='black', figsize=(16, 7))

    safe_data = safe_data.to_crs(world.crs)
    vulnerable_data = vulnerable_data.to_crs(world.crs)

    safe_data.plot(ax=base, color='green', markersize=1, alpha=1, label='Not vulnerable')
    vulnerable_data.plot(ax=base, color='red', markersize=1, alpha=1, label='Vulnerable')

    plt.title("SSH servers running FreeSSHd in September 2012")
    legend = plt.legend()
    for handle in legend.legendHandles:
        # Dirty hack to make the markers in the legend more visible, trademark: Jelle Vos
        handle.set_alpha(1)
        handle.set_sizes([2 if s == 0.2 else s for s in handle.get_sizes()])

    plt.savefig('plots/freesshd_09_2012.png')
    plt.show()
