import numpy as np
import datetime
import glob

from plot_dropbears import get_version_number as dropbear_version_number, is_vulnerable as dropbear_is_vulnerable
from plot_openssh import get_version_number as openssh_version_number, is_vulnerable as openssh_is_vulnerable
from plot_freesshd import get_version_number as freesshd_version_number, is_vulnerable as freesshd_is_vulnerable
from tectia import get_version_number as tectia_version_number, is_vulnerable as tectia_is_vulnerable

patch_date_openssh = datetime.datetime.strptime("2012-01-27", '%Y-%m-%d') # Patched on 2011-01-24, CVE published on 2012-01-27
patch_date_dropbear = datetime.datetime.strptime("2012-06-05", '%Y-%m-%d') # Patched on 2012-02-22, CVE published on 2012-06-05
patch_date_freesshd = datetime.datetime.strptime("2015-02-08", '%Y-%m-%d') # Patched on 2015-02-08, CVE published on 2012-12-04
patch_date_tectia = datetime.datetime.strptime("2012-12-05", '%Y-%m-%d') # Patched on 2012-12-05, CVE published on 2012-12-03, https://web.archive.org/web/20121211052050/www.ssh.com/index.php/component/content/article/531.html

banner_openssh = 'SSH-2.0-OpenSSH'
banner_dropbear = 'SSH-2.0-dropbear'
banner_freesshd = 'SSH-2.0-WeOnlyDo'
banner_tectia = 'SSH Tectia'

country_usa = ["USA"]
country_eu = ["AUT", "BEL", "BGR", "CYP", "CZE", "DNK", "EST", "FIN", "FRA", "DEU", "GRC", "HUN", 
"ITA", "LVA", "LTU", "LUX", "MLT", "NLD", "POL", "PRT", "IRL", "ROU", "SVK", "SVN", "ESP", "SWE", "GBR"] # List of country states at 31 december 2012 (so all except Croatia and incl. the UK)


patch_date = patch_date_dropbear
search_banner = banner_dropbear
get_version_number = dropbear_version_number
is_vulnerable = dropbear_is_vulnerable
country = country_eu

us_vulnerable_ips = {}

total = 0
count = 0

files = list(glob.iglob('processed_data/*.npz'))
files.sort()

for filepath in files:
    print(f"Processing {filepath}")
    entries = np.load(filepath, allow_pickle=True)['arr_0']

    # Extract services and version
    scans = []
    for banner in entries['banner']:
        if search_banner in banner:
            version = get_version_number(banner)

            if version is not None:
                scans.append((version, is_vulnerable(version)))
            else:
                print(f"Could not parse banner {banner}")
                scans.append(None)
        else:
            scans.append(None)

    print(f"Loaded {len(entries)} scan results of which "
          f"{len([s for s in scans if s is not None])} were {search_banner} services.")

    #count = 0
    #len_entries = len(entries)
    for entry, openssh_scan in zip(entries, scans):
        if openssh_scan is None or entry['country'] is None:
            continue

        #count += 1
        #print("{}/{}".format(count, len_entries))
        ip = entry['ip']
        _, vulnerable = openssh_scan
        
        if entry['country'] in country:
            if not vulnerable and ip in us_vulnerable_ips:
                #old_date = us_vulnerable_ips[ip]
                new_date = entry['datetime']
                
                patch_time = datetime.datetime.strptime(new_date, '%Y-%m-%d %H:%M:%S') - patch_date
                total += patch_time.total_seconds()
                count += 1
                
                del us_vulnerable_ips[ip]
                
            elif vulnerable:
                if ip not in us_vulnerable_ips:
                    us_vulnerable_ips[ip] = entry['datetime']
    
    del entries
    
print(f"Average patch time (in seconds): {total/count}, (in days): {total/count/60./60./24.}, tracked ips: {count}, {len(us_vulnerable_ips)} still vulnerable")


