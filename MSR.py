import numpy as np
import datetime
import glob
from typing import Callable
import math
import statistics

countries_usa = ["USA"]
countries_eu = ["AUT", "BEL", "BGR", "CYP", "CZE", "DNK", "EST", "FIN", "FRA", "DEU", "GRC", "HUN",
                "ITA", "LVA", "LTU", "LUX", "MLT", "NLD", "POL", "PRT", "IRL", "ROU", "SVK", "SVN",
                "ESP", "SWE", "GBR"]  # List of country states at 31 december 2012 (all except Croatia and incl. the UK)


def msr(version_maintained: Callable, get_version_number: Callable, search_banner,
        ssh=False, mysql=False, cisco=False):
    print("Start calculating Maintained Service Ratio")

    vulnerable_ips = {}
    ips_running_software = set()

    total_patch_times = []

    files = list(glob.iglob('../processed_data/*.npz'))
    files.sort()
    # print(files)

    total_maintained = 0
    total_eol = 0

    for filepath in files:
        if not ssh:
            if "_22" in filepath:
                continue
        if not mysql:
            if "_3306" in filepath:
                continue
        if not cisco:
            if "_161" in filepath:
                continue
                
        print(f"Processing {filepath}")
        entries = np.load(filepath, allow_pickle=True)['arr_0']

        # Extract services and version
        scans = []
        not_service = 0
        for banner, ip, date in zip(entries['banner'], entries['ip'], entries['datetime']):
            if search_banner in banner:
                version = get_version_number(banner)

                if version is not None:
                    scans.append((ip, version, date))
                else:
                    not_service += 1
            else:
                not_service += 1

        num_maintained = 0
        num_eol = 0

        for ip, version, date_string in scans:   
            date = datetime.datetime.strptime(date_string, '%Y-%m-%d %H:%M:%S').date()
            ips_running_software.add(ip)

            if version_maintained(version, date):
                num_maintained += 1 
            else:
                num_eol += 1

        ratio_maintained = num_maintained/(num_maintained+num_eol)

        print(f"Processed {filepath} with maintained: {num_maintained}, EOL: {num_eol}. Ratio Maintained: {ratio_maintained}")

        total_maintained += num_maintained
        total_eol += num_eol

        del entries

    total_ratio = total_maintained / (total_eol + total_maintained)
    print(f"{len(ips_running_software)} unique IPs were found running this service")
    print(f"Total ratio: {total_ratio}")
