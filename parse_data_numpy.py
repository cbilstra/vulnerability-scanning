import datetime
import json
import time

import numpy as np


def transform_datetime(input_datetime):
    return datetime.datetime.utcfromtimestamp(input_datetime / 1000).strftime('%Y-%m-%d %H:%M:%S')


def process_data(filename: str):
    if filename.endswith('.json'):
        filename = filename[:-5]

    start_time = time.monotonic()

    print("Extracting the entries")
    with open(f'raw_data/{filename}.json', mode='r') as file:
        column_types = [('hash', 'U32'), ('ip', 'U15'), ('banner', 'object'), ('country', object), ('city', object),
                        ('region', object), ('latitude', object), ('longitude', object), ('datetime', 'U20')]
        entries = []
        try:
            while line := next(file):
                entry = json.loads(line)

                # Skip if this is not telnet over TCP
                if entry['name'] != 'ssh' or entry['proto'] != 'tcp':
                    continue

                # Leave out geo information if it is not present and continue
                if entry['geo'] is None:
                    entries.append((entry['_id']['h'],                          # hash
                                    entry['ip'],                                # ip
                                    entry['banner'],                            # banner
                                    None,                                       # country
                                    None,                                       # city
                                    None,                                       # region
                                    None,                                       # latitude
                                    None,                                       # longitude
                                    transform_datetime(entry['t']['$date'])     # datetime
                                    ))
                    continue

                # Extract latitude and longitude if available
                latitude, longitude = None, None
                if 'loc' in entry['geo']:
                    latitude, longitude = entry['geo']['loc']

                # Append this entry
                entries.append((entry['_id']['h'],                          # hash
                                entry['ip'],                                # ip
                                entry['banner'],                            # banner
                                entry['geo'].get('c'),                      # country
                                entry['geo'].get('city'),                   # city
                                entry['geo'].get('reg'),                    # region
                                latitude,                                   # latitude
                                longitude,                                  # longitude
                                transform_datetime(entry['t']['$date'])     # datetime
                                ))
        except StopIteration:
            pass

    print(f"Saving the entries to processed_data/{filename}.npz")
    entries = np.array(entries, dtype=column_types)
    np.savez_compressed(f'processed_data/{filename}.npz', entries)

    print(f"Took {time.monotonic() - start_time}s in total")


process_data('critical_201303_22')
