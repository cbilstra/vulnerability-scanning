import glob
import json

import os
import numpy as np
import re
from matplotlib import pyplot as plt
import pickle

def process_data(filepath: str, geo_dict: dict):
    if os.name == 'nt':
        filename_search = re.compile(r'\\(?P<filename>[\w]+)\.json')
    else:
        filename_search = re.compile(r'/(?P<filename>[\w]+)\.json')

    print(f"Extracting {filepath}")
    with open(filepath, mode='r') as file:
        try:
            while line := next(file):
                entry = json.loads(line)

                if 'geo' in entry and entry['geo'] is not None:
                    country = entry['geo'].get('c')
                else:
                    country = "Unknown"

                if country not in geo_dict:
                    geo_dict[country] = 0

                geo_dict[country] += 1


        except StopIteration:
            pass

def plot_date_dict(date_dict):
    print("Plotting data...")
    sorted_lists = sorted(date_dict.items(), key=lambda item: item[1], reverse=True)
    x, y = zip(*sorted_lists)

    n_of_bars = 10
    fig = plt.figure()
    ax1 = fig.subplots(1,1)
    ax1.grid(axis="y")
    ax1.bar(x[:n_of_bars], y[:n_of_bars])
    ax1.set_xlabel("Country")
    ax1.set_ylabel("Number of entries")
    ax1.set_ylim(0)

    fig.savefig("plots/country_dis.pdf", bbox_inches='tight')


if __name__ == "__main__":
    files = list(glob.iglob('raw_data/*.json'))
    files.sort()

    date_dict = {}
    for filepath in files:
        process_data(filepath, date_dict)

    filename = "processed_data/geo_dict.pi"
    with open(filename, mode="wb") as f:
        pickle.dump(date_dict, f)

    # with open(filename, mode="rb") as f:
    #     date_dict = pickle.load(f)

    plot_date_dict(date_dict)
    #print(date_dict)