import glob
import json

import os
import numpy as np
import re
from matplotlib import pyplot as plt
import pickle

def process_data(filepath: str, geo_dict: dict):
    if os.name == 'nt':
        filename_search = re.compile(r'\\(?P<filename>[\w]+)\.json')
    else:
        filename_search = re.compile(r'/(?P<filename>[\w]+)\.json')

    print(f"Extracting {filepath}")
    with open(filepath, mode='r') as file:
        try:
            while line := next(file):
                entry = json.loads(line)

                if 'geo' in entry and entry['geo'] is not None:
                    country = entry['geo'].get('c')
                else:
                    country = "Unknown"

                if country not in geo_dict:
                    geo_dict[country] = 0

                geo_dict[country] += 1


        except StopIteration:
            pass

def plot_date_dict(date_dict_05, date_dict_01):
    print("Plotting data...")
    sorted_lists = sorted(date_dict_05.items(), key=lambda item: item[1], reverse=True)
    x, y = zip(*sorted_lists)

    n_of_bars = 10

    y2 = []
    for country in x[:n_of_bars]:
        y2.append(date_dict_01[country])


    fig = plt.figure()
    ax1 = fig.subplots(1,1)
    ax1.grid(axis="y")

    # https://stackoverflow.com/a/48158449
    def subcategorybar(X, vals, labels, width=0.8):
        n = len(vals)
        _X = np.arange(len(X))
        for i in range(n):
            ax1.bar(_X - width/2. + i/float(n)*width, vals[i], 
                    width=width/float(n), align="edge", label=labels[i])   
        ax1.set_xticks(_X)
        ax1.set_xticklabels(X)

    subcategorybar(x[:n_of_bars], [y[:n_of_bars],y2], ["2012-06", "2013-03"])

    # width=0.3
    # ax1.bar(x[:n_of_bars], y[:n_of_bars], width=width, label="2012-05")
    # ax1.bar(x[:n_of_bars] + width, y2, width=width, label="2013-01")
    
    ax1.set_xlabel("Country")
    ax1.set_ylabel("Number of entries")
    ax1.set_ylim(0)
    ax1.legend()

    fig.savefig("plots/country_dis_compared.pdf", bbox_inches='tight')


if __name__ == "__main__":
    files = list(glob.iglob('raw_data/critical_201206_*.json'))
    files.sort()

    date_dict_05 = {}
    for filepath in files:
        process_data(filepath, date_dict_05)

    files = list(glob.iglob('raw_data/critical_201303_*.json'))
    files.sort()

    date_dict_01 = {}
    for filepath in files:
        process_data(filepath, date_dict_01)

    filename = "processed_data/geo_dict_05.pi"
    with open(filename, mode="wb") as f:
        pickle.dump(date_dict_05, f)

    filename = "processed_data/geo_dict_01.pi"
    with open(filename, mode="wb") as f:
        pickle.dump(date_dict_01, f)

    # with open(filename, mode="rb") as f:
    #     date_dict = pickle.load(f)

    plot_date_dict(date_dict_05, date_dict_01)
    #print(date_dict)