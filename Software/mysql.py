import re

import numpy as np
import datetime
import glob

# from plot_dropbears import get_version_number as dropbear_version_number, is_vulnerable as dropbear_is_vulnerable
from openSSH import get_version_number as openssh_version_number, is_vulnerable as openssh_is_vulnerable
# from plot_freesshd import get_version_number as freesshd_version_number, is_vulnerable as freesshd_is_vulnerable

# patch_date_openssh = datetime.datetime.strptime("2012-01-27", '%Y-%m-%d') # Patched on 2011-01-24, CVE published on 2012-01-27
# patch_date_dropbear = datetime.datetime.strptime("2012-06-05", '%Y-%m-%d') # Patched on 2012-02-22, CVE published on 2012-06-05
# patch_date_freesshd = datetime.datetime.strptime("2015-02-08", '%Y-%m-%d') # Patched on 2015-02-08, CVE published on 2012-12-04

# banner_openssh = 'SSH-2.0-OpenSSH'
# banner_dropbear = 'SSH-2.0-dropbear'
# banner_freesshd = 'SSH-2.0-WeOnlyDo'

# country_usa = ["USA"]
# country_eu = ["AUT", "BEL", "BGR", "CYP", "CZE", "DNK", "EST", "FIN", "FRA", "DEU", "GRC", "HUN",
# "ITA", "LVA", "LTU", "LUX", "MLT", "NLD", "POL", "PRT", "IRL", "ROU", "SVK", "SVN", "ESP", "SWE", "GBR"] # List of country states at 31 december 2012 (so all except Croatia and incl. the UK)


# patch_date = patch_date_dropbear
# search_banner = banner_dropbear
# get_version_number = dropbear_version_number
# is_vulnerable = dropbear_is_vulnerable
# country = country_eu

# CVE-2011-2262 https://www.cvedetails.com/cve/CVE-2011-2262/
patch_date_2262 = datetime.datetime.strptime("2012-01-18", '%Y-%m-%d')
search_banner_2262 = "CVE 2262"
def is_vulnerable_2262(version: str):
    splitted = version.split(".")
    if len(splitted) < 3:
        return False  # cannot determine

    try:
        minor = int(splitted[2])
    except ValueError:
        return False

    if version.startswith("5.1."):
        return minor <= 50
    elif version.startswith("5.5."):
        return minor <= 28
    else:
        return False


us_vulnerable_ips = {}

total = 0
count = 0

files = list(glob.iglob('processed_data/*.npz'))
files.sort()

vs = set()
for filepath in files:
    print(f"Processing {filepath}")
    entries = np.load(filepath, allow_pickle=True)['arr_0']
    # print(entries['banner'])

    # Extract services and version
    scans = []
    for banner in entries['banner']:
        versions = re.findall("[0-9]+\.[0-9]+\.[0-9]+-[0-9A-Za-z]*", banner)
        if len(versions) > 0:
            # scans.append((versions[0], is_vulnerable(version)))
            v = versions[0].split("-")[0]
            vs.add(v)
            scans.append((v, is_vulnerable_2262(v)))
        else:
            scans.append(None)

    print(f"Loaded {len(entries)} scan results of which "
          f"{len([s for s in scans if s is not None])} were {search_banner_2262} services.")

    for entry, openssh_scan in zip(entries, scans):
        if openssh_scan is None or entry['country'] is None:
            continue

        # count += 1
        ip = entry['ip']
        _, vulnerable = openssh_scan

        # if entry['country'] in country:
        if not vulnerable and ip in us_vulnerable_ips:
            #old_date = us_vulnerable_ips[ip]
            new_date = entry['datetime']

            patch_time = datetime.datetime.strptime(new_date, '%Y-%m-%d %H:%M:%S') - patch_date_2262
            total += patch_time.total_seconds()
            count += 1

            del us_vulnerable_ips[ip]

        elif vulnerable:
            if ip not in us_vulnerable_ips:
                us_vulnerable_ips[ip] = entry['datetime']

    del entries
    
print(f"Average patch time (in seconds): {total/count}, (in days): {total/count/60./60./24.}, tracked ips: {count}")
# print(sorted(vs))

