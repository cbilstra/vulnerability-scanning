import re
import datetime
from DMDP import calculate


search_banner = ""

# All CVE's for mysql can be found at
# https://www.cvedetails.com/vulnerability-search.php?f=1&vendor=&product=mysql&cveid=&msid=&bidno=&cweid=&cvssscoremin=&cvssscoremax=&psy=2012&psm=1&pey=2012&pem=12&usy=&usm=&uey=&uem=

# # CVE-2011-2262 vulnerability score 5.0 https://www.cvedetails.com/cve/CVE-2011-2262/
# TODO removed 2262 because the publish date is before 05-2012
# patch_date_2262 = datetime.datetime.strptime("2012-01-18", '%Y-%m-%d')

# CVE-2012-3197 vulnerability score 3.5 https://www.cvedetails.com/cve/CVE-2012-3197/ , patch is available since 18-07-2012: https://downloads.mysql.com/archives/community/
patch_date_3197 = datetime.datetime.strptime("2012-10-16", '%Y-%m-%d')

# TODO 3197 and 3177 have same report date.
# CVE-2012-3177 vulnerability score 6.8 https://www.cvedetails.com/cve/CVE-2012-3177/ , patch is available since 29-08-2012 and 11-09-2012 (for the respective vulnerable versions)
patch_date_3177 = datetime.datetime.strptime("2012-10-16", '%Y-%m-%d')

# CVE-2012-2750 vulnerability score 10.0 https://www.cvedetails.com/cve/CVE-2012-2750/ , patch is available since 19-04-2012
patch_date_2750 = datetime.datetime.strptime("2012-08-16", '%Y-%m-%d')

# CVE-2012-1703 vuln score 6.8 https://www.cvedetails.com/cve/CVE-2012-1703/ 
patch_date_1703 = datetime.datetime.strptime("2012-05-03", '%Y-%m-%d')

# CVE-2012-1735 vuln score 6.8 https://www.cvedetails.com/cve-details.php?t=1&cve_id=CVE-2012-1735
patch_date_1735 = datetime.datetime.strptime("2012-07-17", '%Y-%m-%d')

# CVE-2012-4452 vuln score 2.1 https://www.cvedetails.com/cve-details.php?t=1&cve_id=CVE-2012-4452
patch_date_4452 = datetime.datetime.strptime("2012-10-09", '%Y-%m-%d')

# CVE-2012-3158 vuln score 7.5 https://www.cvedetails.com/cve-details.php?t=1&cve_id=CVE-2012-3158
patch_date_3158 = datetime.datetime.strptime("2012-10-16", '%Y-%m-%d')

# CVE-2013-0389 vuln score 6.8 https://www.cvedetails.com/cve-details.php?t=1&cve_id=CVE-2013-0389
patch_date_0389 = datetime.datetime.strptime("2013-01-16", '%Y-%m-%d')

def get_minor(version: str):
    splitted = version.split(".")
    if len(splitted) < 3:
        return False  # cannot determine

    try:
        minor = int(splitted[2])
    except ValueError:
        return False
    
    return minor

def mdp_0389():
    calculate(patch_date_0389, get_version_number, is_vulnerable_0389, search_banner, mysql=True)

def is_vulnerable_0389(version: str):
    minor = get_minor(version)
    if minor is False: return minor
    
    if version.startswith("5.1."):
        return minor <= 66
    
    if version.startswith("5.5."):
        return minor <= 28
    
    return False

def mdp_3158():
    calculate(patch_date_3158, get_version_number, is_vulnerable_3158, search_banner, mysql=True)

def is_vulnerable_3158(version: str):
    minor = get_minor(version)
    if minor is False: return minor
    
    if version.startswith("5.1."):
        return minor <= 64
    
    if version.startswith("5.5."):
        return minor <= 26
    
    return False

def mdp_4452():
    calculate(patch_date_4452, get_version_number, is_vulnerable_4452, search_banner, mysql=True)

def is_vulnerable_4452(version: str):
    minor = get_minor(version)
    if minor is False: return minor
    
    if version.startswith("5.0."):
        return minor == 88
    
    return False

def mdp_1735():
    calculate(patch_date_1735, get_version_number, is_vulnerable_1735, search_banner, mysql=True)

def is_vulnerable_1735(version: str):
    minor = get_minor(version)
    if minor is False: return minor
    
    if version.startswith("5.5."):
        return minor <= 23
    
    return False

def mdp_1735():
    calculate(patch_date_1735, get_version_number, is_vulnerable_1735, search_banner, mysql=True)

def is_vulnerable_1735(version: str):
    minor = get_minor(version)
    if minor is False: return minor
    
    if version.startswith("5.5."):
        return minor <= 23
    
    return False

def mdp_1703():
    calculate(patch_date_1703, get_version_number, is_vulnerable_1703, search_banner, mysql=True)

def is_vulnerable_1703(version: str):
    minor = get_minor(version)
    if minor is False: return minor

    if version.startswith("5.1."):
        return minor <= 61
    
    if version.startswith("5.5."):
        return minor <= 21
    
    return False

def mdp_3197():
    calculate(patch_date_3197, get_version_number, is_vulnerable_3197, search_banner, mysql=True)


def is_vulnerable_3197(version: str):
    minor = get_minor(version)
    if minor is False: return minor

    if version.startswith("5.5."):
        return minor <= 26
    elif version.startswith("5.1."):
        return minor <= 64

    return False


def mdp_3177():
    calculate(patch_date_3177, get_version_number, is_vulnerable_3177, search_banner, mysql=True)


def is_vulnerable_3177(version: str):
    minor = get_minor(version)
    if minor is False: return minor

    if version.startswith("5.5."):
        return minor <= 27
    elif version.startswith("5.1."):
        return minor <= 65

    return False


def mdp_2750():
    calculate(patch_date_2750, get_version_number, is_vulnerable_2750, search_banner, mysql=True)


def is_vulnerable_2750(version: str):
    minor = get_minor(version)
    if minor is False: return minor

    if version.startswith("5.5."):
        return minor <= 22
    else:
        return False


def get_version_number(input_banner: str):
    matches = re.findall("[0-9]+\.[0-9]+\.[0-9]+-[0-9A-Za-z]*", input_banner)
    if len(matches) > 0:
        return matches[0].split("-")[0]
    return None


if __name__ == '__main__':
    mdp_2750()
