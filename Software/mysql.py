import re
import datetime
from DMDP import calculate


search_banner = ""

# All CVE's for mysql can be found at
# https://www.cvedetails.com/vulnerability-search.php?f=1&vendor=&product=mysql&cveid=&msid=&bidno=&cweid=&cvssscoremin=&cvssscoremax=&psy=2012&psm=1&pey=2012&pem=12&usy=&usm=&uey=&uem=

# # CVE-2011-2262 vulnerability score 5.0 https://www.cvedetails.com/cve/CVE-2011-2262/
# TODO removed 2262 because the publish date is before 05-2012
# patch_date_2262 = datetime.datetime.strptime("2012-01-18", '%Y-%m-%d')

# CVE-2012-3197 vulnerability score 3.5 https://www.cvedetails.com/cve/CVE-2012-3197/
patch_date_3197 = datetime.datetime.strptime("2012-10-16", '%Y-%m-%d')

# TODO 3197 and 3177 have same report date.
# CVE-2012-3177 vulnerability score 6.8 https://www.cvedetails.com/cve/CVE-2012-3177/
patch_date_3177 = datetime.datetime.strptime("2012-10-16", '%Y-%m-%d')

# CVE-2012-2750 vulnerability score 10.0 https://www.cvedetails.com/cve/CVE-2012-2750/
patch_date_2750 = datetime.datetime.strptime("2012-08-16", '%Y-%m-%d')


# def mdp_2262():
#     calculate(patch_date_2262, get_version_number, is_vulnerable_2262, search_banner, mysql=True)
#
#
# def is_vulnerable_2262(version: str):
#     splitted = version.split(".")
#     if len(splitted) < 3:
#         return False  # cannot determine
#
#     try:
#         minor = int(splitted[2])
#     except ValueError:
#         return False
#
#     if version.startswith("5.1."):
#         return minor <= 50
#     elif version.startswith("5.5."):
#         return minor <= 28
#     else:
#         return False


def mdp_3197():
    calculate(patch_date_3197, get_version_number, is_vulnerable_3197, search_banner, mysql=True)


def is_vulnerable_3197(version: str):
    splitted = version.split(".")
    if len(splitted) < 3:
        return False  # cannot determine

    try:
        minor = int(splitted[2])
    except ValueError:
        return False

    if version.startswith("5.5."):
        return minor <= 26
    else:
        return False


def mdp_3177():
    calculate(patch_date_3177, get_version_number, is_vulnerable_3177, search_banner, mysql=True)


def is_vulnerable_3177(version: str):
    splitted = version.split(".")
    if len(splitted) < 3:
        return False  # cannot determine

    try:
        minor = int(splitted[2])
    except ValueError:
        return False

    if version.startswith("5.5."):
        return minor <= 27
    else:
        return False


def mdp_2750():
    calculate(patch_date_2750, get_version_number, is_vulnerable_2750, search_banner, mysql=True)


def is_vulnerable_2750(version: str):
    splitted = version.split(".")
    if len(splitted) < 3:
        return False  # cannot determine

    try:
        minor = int(splitted[2])
    except ValueError:
        return False

    if version.startswith("5.5."):
        return minor <= 22
    else:
        return False


def get_version_number(input_banner: str):
    matches = re.findall("[0-9]+\.[0-9]+\.[0-9]+-[0-9A-Za-z]*", input_banner)
    if len(matches) > 0:
        return matches[0].split("-")[0]
    return None


if __name__ == '__main__':
    mdp_2750()
