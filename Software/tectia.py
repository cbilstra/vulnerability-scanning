import re
import datetime
from DMDP import calculate
from MSR import msr

banner = 'SSH Tectia'
# https://web.archive.org/web/20121211052050/www.ssh.com/index.php/component/content/article/531.html
patch_date = datetime.datetime.strptime("2012-12-05", '%Y-%m-%d') # Patched on 2012-12-05, CVE published on 2012-12-03,
search_pattern = re.compile(r'\-(?P<version>\d\.\d\.\d*).+SSH Tectia')


def mdp():
    calculate(patch_date, get_version_number, is_vulnerable, banner, ssh=True)


def get_version_number(input_banner: str):
    matches = search_pattern.search(input_banner)

    if matches is None:
        return None
    return matches.group('version')


def is_vulnerable(input_version) -> bool:
    ver = [int(x) for x in input_version.split('.')]
    
    if ver[0] == 6:
        if ver[1] == 0:
            return 4 <= ver[2] <= 20
        
        if ver[1] == 1:
            return 0 <= ver[2] <= 12

        if ver[1] == 2:
            return 0 <= ver[2] <= 5

        if ver[1] == 3:
            return 0 <= ver[2] <= 2

    return False


def version_maintained(version, date):
    # Source: https://web.archive.org/web/20130620081004/http://www.ssh.com/index.php/end-of-support-date.html
    # 6.2: april 2013
    # 6.1: may 2012

    try:
        splitted = version.split('.')
        major = int(splitted[0])
        if major < 6:
            return False
        elif major > 6:
            return True
        else:
            # major == 6
            med = int(splitted[1])
            if med == 2:
                return date < datetime.date(2013, 4, 30)
            elif med == 1:
                return date < datetime.date(2012, 5, 30)
            elif med > 2:
                return True

            # med == 0
            return False
    except:
        return False


if __name__ == '__main__':
    msr(version_maintained=version_maintained, get_version_number=get_version_number, search_banner=banner,
        ssh=True)
